@c = dso_local constant [2 x i32] [i32 1, i32 3]
@b = dso_local global [6 x i32] [i32 1, i32 0, i32 0, i32 0, i32 0, i32 0]
@e = dso_local global [16 x i32] zeroinitializer
@d = dso_local global [5 x i32] zeroinitializer
@a = dso_local global [3 x i32] [i32 1, i32 2, i32 0]
declare i32 @getint()
declare i32 @getch()
declare i32 @getarray(i32*)
declare void @putint(i32)
declare void @putch(i32)
declare void @putarray(i32,i32*)
declare void @memset(i32*, i32, i32)
define dso_local i32 @main() {
%1 = mul i32 1, 1
%2 = mul i32 0, 1
%3 = add i32 %2, %1
%4 = getelementptr [2 x i32], [2 x i32]* @c, i32 0, i32 %3
%5 = load i32, i32* %4
%6 = mul i32 0, 3
%7 = mul i32 0, 1
%8 = add i32 %7, %6
%9 = getelementptr [6 x i32], [6 x i32]* @b, i32 0, i32 %8
%10 = load i32, i32* %9
%11 = add i32 %5, %10
%12 = mul i32 0, 1
%13 = mul i32 0, 1
%14 = add i32 %13, %12
%15 = getelementptr [2 x i32], [2 x i32]* @c, i32 0, i32 %14
%16 = load i32, i32* %15
%17 = add i32 %11, %16
%18 = mul i32 1, 1
%19 = getelementptr [3 x i32], [3 x i32]* @a, i32 0, i32 %18
%20 = load i32, i32* %19
%21 = add i32 %17, %20
%22 = mul i32 4, 1
%23 = getelementptr [5 x i32], [5 x i32]* @d, i32 0, i32 %22
%24 = load i32, i32* %23
%25 = add i32 %21, %24
call void @putint(i32 %25)
ret i32 0
}